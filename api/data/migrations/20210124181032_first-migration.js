exports.up = async (knex) => {
  await knex.schema
    .createTable('organizers', table => {
      table.increments('organizer_id')
      table.string('organizer_username', 200).notNullable().unique()
      table.string('organizer_password', 200).notNullable()
    })
    .createTable('potlucks', table => {
      table.increments('potluck_id')
      table.string('potluck_name', 200).notNullable()
      table.string('date', 200).notNullable()
      table.string('time', 200)
      table.string('location', 200)
      table.integer('organizer_id')
        .unsigned()
        .references('organizer_id')
        .inTable('organizers')
        .onDelete('restrict')
        .onUpdate('restrict')
    })
    .createTable('users', table => {
      table.increments('user_id')
      table.string('username', 200).notNullable().unique()
      table.string('password', 200).notNullable()
      table.integer('potluck_id')
        .unsigned()
        .references('potluck_id')
        .inTable('potlucks')
        .onDelete('restrict')
        .onUpdate('restrict')
    })
    .createTable('items', table => {
      table.increments('item_id')
      table.string('item_name', 200).notNullable()
      table.integer('potluck_id')
        .unsigned()
        .references('potluck_id')
        .inTable('potlucks')
        .onDelete('restrict')
        .onUpdate('restrict')
      table.integer('user_id')
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('restrict')
        .onUpdate('restrict')
    })
    .createTable('going', table => {
      table.increments('going_id')
      table.boolean('isGoing').defaultTo(false)
      table.integer('user_id')
        .unsigned()
        .references('user_id')
        .inTable('users')
        .onDelete('restrict')
        .onUpdate('restrict')
    })
}

exports.down = async (knex) => {
  await knex.schema.dropTableIfExists('going')
  await knex.schema.dropTableIfExists('items')
  await knex.schema.dropTableIfExists('users')
  await knex.schema.dropTableIfExists('potlucks')
  await knex.schema.dropTableIfExists('organizers')
}
